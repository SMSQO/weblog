<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weblog.persistence.mapper.CommentMapper">
    <resultMap id="CommentInfo" type="com.weblog.business.entity.CommentInfo" autoMapping="true">
        <id property="id" column="id"/>

        <result property="content" column="content"/>
        <result property="reviewPassed" column="review_passed"/>
        <association property="author" javaType="com.weblog.business.entity.BloggerInfo"
                     autoMapping="true"
                     column="user_id"
                     select="com.weblog.persistence.mapper.BloggerMapper.getBloggerById">
            <id property="id" column="user_id"/>
        </association>
        <association property="replyTo" javaType="com.weblog.business.entity.CommentInfo"
                     autoMapping="true"
                     column="reply_to"
                     select="com.weblog.persistence.mapper.CommentMapper.getCommentById">
            <id property="id" column="reply_to"/>
        </association>
    </resultMap>
    <sql id="commentColumnC">
        SELECT c.id            AS id,
               c.content       AS content,
               c.review_passed AS review_passed,
               c.user_id       AS user_id,
               c.reply_to      AS reply_to,
               CONCAT('/blog/', p.author, '/post/', p.id, '/detail')  AS post,
               CONCAT('/blog/', p.author, '/post/', p.id, '/comment/', c.id, '/replied') AS replied
        FROM comment c JOIN post p ON c.post_id = p.id
    </sql>
    <select id="getCommentOnlyUnreviewed" resultMap="CommentInfo">
        <include refid="commentColumnC"/>
        WHERE post_id = #{id} AND reply_to IS NULL AND review_passed IS NULL
        LIMIT #{count} OFFSET #{start}
    </select>
    <select id="getCommentById" resultMap="CommentInfo">
        <include refid="commentColumnC"/>
        WHERE c.id = #{id}
    </select>
    <select id="getComment" resultMap="CommentInfo">
        <include refid="commentColumnC"/>
        WHERE post_id = #{pid}
          AND (reply_to IS NULL OR reply_to = 0)
        LIMIT #{count} OFFSET #{start}
    </select>
    <insert id="addComment">
        INSERT INTO comment(post_id, user_id, content, reply_to, review_passed)
        VALUES (#{pid}, #{bid}, #{content}, #{replyTo}, NULL)
    </insert>
    <select id="getReplyComment" resultMap="CommentInfo">
        <include refid="commentColumnC"/>
        WHERE reply_to = #{id}
    </select>
    <update id="reviewComment">
        UPDATE comment
        SET review_passed = #{pass}
        WHERE id = #{id}
    </update>
    <delete id="deleteComment">
        DELETE
        FROM comment
        WHERE id = #{cid}
    </delete>

</mapper>
