<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weblog.persistence.mapper.CommentMapper">
    <resultMap id="CommentInfo" type="com.weblog.business.entity.CommentInfo" autoMapping="true">
        <id property="id" column="id"/>

        <result property="content" column="content"/>
        <result property="reviewPassed" column="review_passed"/>
        <association property="author" javaType="com.weblog.business.entity.BloggerInfo"
                     autoMapping="true"
                     column="user_id"
                     select="com.weblog.persistence.mapper.BloggerMapper.getBloggerById">
            <id property="id" column="user_id"/>
        </association>
        <association property="replyTo" javaType="com.weblog.business.entity.CommentInfo"
                     autoMapping="true"
                     column="reply_to"
                     select="com.weblog.persistence.mapper.CommentMapper.getCommentById">
            <id property="id" column="reply_to"/>
        </association>
    </resultMap>
    <select id="getCommentOnlyUnreviewed" resultMap="CommentInfo">
        SELECT id,
               content,
               review_passed,
               user_id,
               reply_to
        FROM comment
        WHERE post_id = #{id} and reply_to is null and review_passed is null limit #{count} offset #{start}
    </select>
    <select id="getCommentById" resultMap="CommentInfo">
        SELECT id,
               post_id,
               reply_to,
               content,
               review_passed,
               user_id
        FROM comment
        WHERE id = #{id}
    </select>
    <select id="getComment" resultMap="CommentInfo">
        SELECT id,
               content,
               review_passed,
               user_id
        FROM comment
        WHERE post_id = #{id} and reply_to is null limit #{count} offset #{start}
    </select>
    <insert id="addComment">
        INSERT INTO comment(post_id, user_id, content, reply_to, review_passed)
        VALUES (#{pid}, #{bid}, #{content}, #{reply_to}, null)
    </insert>
    <select id="getReplyComment" resultMap="CommentInfo">
        SELECT id,
               content,
               review_passed,
               user_id,
               reply_to,
               post_id
        FROM comment
        WHERE reply_to = #{id}
    </select>
    <update id="reviewComment">
        update comment
        set review_passed = #{pass}
        where id = #{id}
    </update>
    <delete id="deleteComment">
        DELETE
        from comment
        where id = #{cid}
    </delete>

</mapper>
